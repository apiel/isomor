language: node_js

node_js:
  - 'node'

# branches:
#   only:
#   - master
#   - develop
#   - /^release-.*/

install:
  - BASE=$(pwd)/packages
  - cp -r ${BASE}/isomor-transpiler ${BASE}/../../isomor-transpiler # copy transpiler in isolated folder outside of lerna
  - cd ${BASE}/../../isomor-transpiler
  - yarn
  - cd ${BASE}/example/react
  - yarn
  - cd ${BASE}/example/vue
  - yarn
  - cd ${BASE}/isomor-core
  - yarn
  - cd ${BASE}/ci-test/react-app
  - yarn

script:
  - cd ${BASE}/isomor-core
  - yarn test

  - cd ${BASE}/../../isomor-transpiler
  - yarn test

##
## REACT
##

  # - ls ${BASE}
  # - ls ${BASE}/ci-test
  # - ls ${BASE}/ci-test/react-app
  # - cd ${BASE}/ci-test/react-app
  # - yarn isomor:build
  # - CI=false yarn build
  # - yarn test # instead to have this /test/react, we could inject e2e test in the react version of isomor-react-app

  - cd ${BASE}/example/react
  - DIST_SERVER_FOLDER=${BASE}/example/react/dist-server yarn demo 2> yarn.prod.log &
  - sleep 30 # should use wait-on lib instead to sleep
  - cat yarn.prod.log
  - curl http://127.0.0.1:3005/
  - curl http://127.0.0.1:3005/isomor/status-server-getStatus/getStatus

  - kill $(lsof -t -i:3005 -sTCP:LISTEN)

  - cd ~ && mkdir npxisomorreactapp && cd npxisomorreactapp
  - npx isomor-react-app my-app
  - cd my-app
  - yarn isomor:build
  - yarn serv:build
  - yarn build
  # maybe instead use `yarn dev` and see if pages and api is accessible?

##
##  VUEjs
##

  - cd ${BASE}/example/vue
  - DIST_SERVER_FOLDER=${BASE}/example/vue/dist-server yarn demo 2> yarn.prod.log &
  - sleep 30 # should use wait-on lib instead to sleep
  - cat yarn.prod.log
  - curl http://127.0.0.1:3005/
  - curl http://127.0.0.1:3005/isomor/server-data/getServerUptime

  - kill $(lsof -t -i:3005 -sTCP:LISTEN)

  - cd ~ && mkdir npxisomorvueapp && cd npxisomorvueapp
  - npx isomor-vue-app my-app
  - cd my-app
  - yarn isomor:build
  - yarn serv:build
  - yarn build

cache:
  directories:
    - node_modules
